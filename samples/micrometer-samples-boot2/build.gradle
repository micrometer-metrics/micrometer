plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.2'
}

apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":micrometer-core")
    ['atlas', 'azure-monitor', 'prometheus', 'datadog', 'elastic', 'ganglia', 'graphite', 'health', 'jmx', 'influx', 'statsd', 'new-relic', 'cloudwatch', 'cloudwatch2', 'signalfx', 'wavefront', 'elastic', 'dynatrace', 'humio', 'appoptics', 'stackdriver'].each { sys ->
        implementation project(":micrometer-registry-$sys")
    }

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('org.springframework.boot:spring-boot-starter-actuator') {
        exclude group: 'io.micrometer', module: 'micrometer-core'
    }

    implementation platform('org.springframework.cloud:spring-cloud-dependencies:latest.release')
    implementation('org.springframework.cloud:spring-cloud-starter-sleuth') {
        // Zipkin can use Micrometer to record metrics
        // TraceMetricsMicrometerConfiguration autoconfigures this
        // So if Micrometer wants to depend on Sleuth's Tracer, we have a circular dependency
        // I'm not sure why spring-cloud-starter-sleuth depends on zipkin-reporter-metrics-micrometer and not spring-cloud-sleuth-zipkin
        exclude group: 'io.zipkin.reporter2', module: 'zipkin-reporter-metrics-micrometer'
    }
    implementation('org.springframework.cloud:spring-cloud-sleuth-zipkin')

}

bootJar {
    enabled = false
}

bootJarMainClassName {
    enabled = false
}
