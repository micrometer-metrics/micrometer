def VERSIONS = [
        libs.logback12,
        libs.colt,
        libs.dynatraceUtils,
        libs.jacksonDatabind,
        libs.caffeine,
        libs.kafkaJunit,
        libs.wiremock,
        libs.dagger,
        libs.daggerCompiler,
        libs.guava,
        libs.guice,
        libs.hazelcast,
        libs.h2,
        libs.applicationInsights,
        libs.hystrix,
        libs.spectatorAtlas,
        libs.newrelicApi,
        libs.signalfx,
        libs.okhttp,
        libs.wavefront,
        libs.dropwizardMetricsCore,
        libs.dropwizardMetricsGraphite,
        libs.dropwizardMetricsJmx,
        libs.grpcApi,
        libs.grpcCore,
        libs.grpcInprocess,
        libs.grpcServices,
        libs.grpcStubs,
        libs.grpcAlts,
        libs.grpcTestingProto,
        libs.grpcKotlinStub,
        libs.gmetric4j,
        libs.restAssured,
        libs.retrofit2,
        libs.jakarta.jmsApi,
        libs.jakarta.servletApi,
        libs.javax.cacheApi,
        libs.javax.inject,
        libs.javax.servletApi,
        libs.jaxbApi,
        libs.contextPropagation,
        libs.kotlinxCoroutines,
        libs.ehcache2,
        libs.ehcache3,
        libs.activemqArtemisJakartaClient,
        libs.activemqArtemisJunit5,
        libs.httpcomponents.async,
        libs.httpcomponents.client,
        libs.httpcomponents.client5,
        libs.kafkaClients,
        libs.kafkaStreams,
        libs.log4j,
        libs.tomcatEmbed,
        libs.aspectjweaver,
        libs.assertj,
        libs.awaitility,
        libs.jersey2Server,
        libs.jersey2Hk2,
        libs.jersey2TestFrameworkInmemory,
        libs.hdrhistogram,
        libs.hibernateEntitymanager,
        libs.hsqldb,
        libs.jsr107,
        libs.latencyUtils,
        libs.mongoSync,
        libs.postgre,
        libs.slf4jApi,
        libs.testcontainers.junitJupiter,
        libs.testcontainers.kafka,
        libs.testcontainers.postgresql,
        libs.testcontainers.mongodb,
        libs.testcontainers,
        libs.wiremockJunit5,
        libs.cloudwatch2
]

def PLATFORM_BOMS = [
        libs.reactorBom,
        libs.nettyBom,
        libs.junitBom
]

subprojects {
  plugins.withId('java-library') {
    dependencies {
      constraints {
        // Direct dependencies
        VERSIONS.each {version->
          // java-library plugin has three root configurations, so we apply constraints too all of
          // them so they all can use the managed versions.
          api version
          compileOnly version
          runtimeOnly version
        }
      }
      PLATFORM_BOMS.each { bom ->
        api platform(bom)
        compileOnly platform(bom)
        runtimeOnly platform(bom)
      }
    }
  }
  configurations.configureEach {
    // see https://github.com/google/guava/releases/tag/v32.1.0
    // "Reporting dependencies that overlap with Guava"
    resolutionStrategy.capabilitiesResolution.withCapability('com.google.guava:listenablefuture') {
        select('com.google.guava:guava:r09')
    }
  }
}
