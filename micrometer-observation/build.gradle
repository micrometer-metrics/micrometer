plugins {
    id 'io.freefair.aspectj.post-compile-weaving' version '8.6'
}

description 'Module containing Observation related code'

jar {
    bundle {
        bnd '''\
        Import-Package: \
            javax.servlet.*;resolution:=optional,\
            io.micrometer.context.*;resolution:=optional,\
            org.aspectj.*;resolution:=optional,\
            *
        '''.stripIndent()
    }
}

dependencies {
    api project(":micrometer-commons")

    optionalApi 'io.micrometer:context-propagation'

    // HttpServlet KeyValueProvider
    optionalApi 'javax.servlet:javax.servlet-api'

    // Aspects
    implementation "org.aspectj:aspectjrt:${libs.versions.aspectjweaver.get()}"
    optionalApi 'org.aspectj:aspectjweaver'

    // log monitoring
    testImplementation 'ch.qos.logback:logback-classic'
    testImplementation 'org.apache.logging.log4j:log4j-core'

    testImplementation project(':micrometer-observation-test')

    testImplementation 'org.springframework:spring-context'

    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation(libs.archunitJunit5) {
        // avoid transitively pulling in slf4j 2
        exclude group: "org.slf4j", module: "slf4j-api"
    }

    testImplementation libs.mockitoCore5

    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.awaitility:awaitility'
}
